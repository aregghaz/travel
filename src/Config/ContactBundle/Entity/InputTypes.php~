<?php

namespace Config\ContactBundle\Entity;

use Config\MediaBundle\Lib\FileManager;
use Config\MediaBundle\Model\File;
use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;
use Gedmo\Mapping\Annotation as Gedmo;
use Gedmo\Translatable\Translatable;
use Symfony\Component\HttpFoundation\File\UploadedFile;
use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity;
use Symfony\Bridge\Doctrine\Validator\Constraints as DoctrineAssert;
/**
 * Class InputTypes
 * @package Config\Contact\Entity
 * @ORM\HasLifecycleCallbacks
 * @ORM\Table(name="input_types")
 * @DoctrineAssert\UniqueEntity(fields="type", message="This name already exists")
 * @ORM\Entity()
 */
class InputTypes extends File  implements  Translatable
{
    /**
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @var string $type
     * @ORM\Column(type="string", unique=true, length=100, nullable=false)
     */
    protected $type;

    /**
     * @ORM\OneToMany(targetEntity="Input", mappedBy="type",cascade={"persist"})
     */
    protected $input;

    public function __toString()
    {
        return ($this->type) ? $this->type : '';
    }
    
    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set type
     *
     * @param string $type
     *
     * @return InputTypes
     */
    public function setType($type)
    {
        $this->type = $type;

        return $this;
    }

    /**
     * Get type
     *
     * @return string
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Add input
     *
     * @param \Config\ContactBundle\Entity\Input $input
     *
     * @return InputTypes
     */
    public function addInput(\Config\ContactBundle\Entity\Input $input)
    {
        $this->input[] = $input;

        return $this;
    }

    /**
     * Remove input
     *
     * @param \Config\ContactBundle\Entity\Input $input
     */
    public function removeInput(\Config\ContactBundle\Entity\Input $input)
    {
        $this->input->removeElement($input);
    }

    /**
     * Get input
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getInput()
    {
        return $this->input;
    }
}
