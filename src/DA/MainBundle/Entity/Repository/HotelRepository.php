<?php

namespace DA\MainBundle\Entity\Repository;
use Doctrine\ORM\Query;

/**
 * HotelRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HotelRepository extends \Doctrine\ORM\EntityRepository
{

    const HOTEL = 'DAMainBundle:Hotel';
    
    
    
    public function getHotelsCity()
    {

        $query = $this->getEntityManager()
            ->createQuery('SELECT l FROM DAMainBundle:Location l
                            JOIN l.hotel a
                          
                            ')
        ;
        $query->setHint(Query::HINT_CUSTOM_OUTPUT_WALKER, 'Gedmo\\Translatable\\Query\\TreeWalker\\TranslationWalker');
        $result = $query->getResult();
        if(!$result){
            return null;
        }
        return $result;
    }

    public function getHotelBySlug($slug)
    {

        $query = $this->getEntityManager()
            ->createQuery('SELECT a FROM DAMainBundle:Hotel a
                            WHERE a.slug = :slug
                            ')
            ->setParameter('slug',$slug);
        $query->setHint(Query::HINT_CUSTOM_OUTPUT_WALKER, 'Gedmo\\Translatable\\Query\\TreeWalker\\TranslationWalker');
        $result = $query->getResult();
        if(!$result){
            return null;
        }
        return $result[0];
    }

    public function filterHotel($city,$star)
    {
        $em = $this->getEntityManager()->createQueryBuilder();
        $query = $em    
            ->select('a')
            ->from(self::HOTEL, 'a');
        if($city != '0'){
            $query->where('a.location = :city' );
            $query->setParameter('city', $city);
        }
        if($star != '0'){
            $query->andwhere('a.star = :star' );
            $query->setParameter('star', $star);
        }

        $q = $query->getQuery();
        $q->setHint(Query::HINT_CUSTOM_OUTPUT_WALKER, 'Gedmo\\Translatable\\Query\\TreeWalker\\TranslationWalker');

        $result = $q->getResult();

        if(!$result){
            return null;
        }
        return $result;
        
        
    }


    public function getHotelInCity($location)
    {
        $query = $this->getEntityManager()

            ->createQuery('SELECT a,RAND() as HIDDEN rand FROM DAMainBundle:Hotel a
                            WHERE a.location = :location
                            ORDER BY  rand
                            ')
            ->setParameter('location',$location)
            ->setMaxResults(3);
        $query->setHint(Query::HINT_CUSTOM_OUTPUT_WALKER, 'Gedmo\\Translatable\\Query\\TreeWalker\\TranslationWalker');
        $result = $query->getResult();

        if(!$result){
            return null;
        }
        return $result;
    }
    public function getBestPriceHotel()
    {

        $query = $this->getEntityManager()
            ->createQuery('SELECT a FROM DAMainBundle:Hotel a
                            WHERE a.best_price = TRUE 
                            ')
            ;
        $query->setHint(Query::HINT_CUSTOM_OUTPUT_WALKER, 'Gedmo\\Translatable\\Query\\TreeWalker\\TranslationWalker');
        $result = $query->getResult();
        if(!$result){
            return null;
        }
        return $result;
    }


}
